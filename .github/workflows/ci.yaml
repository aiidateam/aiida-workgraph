name: ci

on: [push, pull_request]

jobs:

    pre-commit:

        runs-on: ubuntu-latest

        steps:
        -   uses: actions/checkout@v2

        -   name: Cache Python dependencies
            uses: actions/cache@v1
            with:
                path: ~/.cache/pip
                key: pip-pre-commit-${{ hashFiles('**/setup.json') }}
                restore-keys:
                    pip-pre-commit-

        -   name: Set up Python
            uses: actions/setup-python@v2
            with:
                python-version: '3.10'

        -   name: Install Python dependencies
            run: pip install -e .[widget,pre-commit,tests]

        -   name: Run pre-commit
            run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

    test:

        runs-on: ubuntu-latest

        strategy:
            matrix:
                python-version: ['3.9', '3.11']
                aiida-core-version: ['2.4', '2.5']

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_HOST: 127.0.0.1
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: postgres
                ports:
                -   5432:5432
            rabbitmq:
                image: rabbitmq:latest
                ports:
                -   5672:5672

        steps:
        -   uses: actions/checkout@v2

        -   name: Cache Python dependencies
            uses: actions/cache@v1
            with:
                path: ~/.cache/pip
                key: pip-${{ matrix.python-version }}-tests-${{ hashFiles('**/setup.json') }}
                restore-keys:
                    pip-${{ matrix.python-version }}-tests

        -   name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v2
            with:
                python-version: ${{ matrix.python-version }}

        -   name: Install aiida-core
            run: pip install aiida-core==${{ matrix.aiida-core-version }}

        -   name: Install Python dependencies
            run: |
                pip install -e .[widget,pre-commit,tests]
                playwright install
                pip list

        -   name: Create AiiDA profile
            run: verdi setup -n --config .github/config/profile.yaml

        -   name: Install Dependencies for widget
            working-directory: aiida_workgraph/widget
            run: |
                npm install
                npm run build

        -   name: Install Dependencies, Start React Application
            working-directory: aiida_workgraph/web/frontend
            run: |
                npm install
                npm run build
                workgraph web start

        -   name: Run pytest
            env:
                AIIDA_WARN_v3: 1
            run: |
                pytest -v tests --cov

        -   name: Upload coverage reports to Codecov
            uses: codecov/codecov-action@v4.0.1
            with:
                token: ${{ secrets.CODECOV_TOKEN }}
                flags: python-${{ matrix.python-version }}
